{"ast":null,"code":"var _jsxFileName = \"/Users/kartarjabanda/Documents/WebDev/itunes-top-albums/src/components/list/List.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport styles from './list.module.scss';\nimport ListItem from '../list-item/ListItem';\nimport { TopAlbumsContext } from '../../state/topAlbumsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(({\n  className\n}) => {\n  _s();\n\n  const {\n    albumsList,\n    searchTerm\n  } = useContext(TopAlbumsContext); // eslint-disable-next-line no-unused-vars\n\n  const renderItems = () => {\n    // here we render the 100 albums, then user can filter if they want with search\n    if (!searchTerm) {\n      return albumsList && albumsList.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        rank: index + 1,\n        name: item['im:name'].label,\n        artist: item['im:artist'].label,\n        imgSrc: item['im:image'][0].label\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)) || /*#__PURE__*/_jsxDEV(SkeletonTheme, {\n        color: \"lightGray\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(Skeleton, {\n            count: 10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this);\n    }\n\n    return albumsList && albumsList.filter(album => album['im:name'].label.toLowerCase().includes(searchTerm.toLowerCase())).map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n      name: item['im:name'].label,\n      artist: item['im:artist'].label\n    }, item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${className} ${styles.container}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: `${styles.header} text-white`,\n      children: \"Album\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.listItems,\n      children: renderItems()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}, \"5LdlAfV32Pen6EkxzpF+KGnTFAE=\");","map":{"version":3,"sources":["/Users/kartarjabanda/Documents/WebDev/itunes-top-albums/src/components/list/List.jsx"],"names":["React","useContext","Skeleton","SkeletonTheme","styles","ListItem","TopAlbumsContext","className","albumsList","searchTerm","renderItems","map","item","index","label","filter","album","toLowerCase","includes","container","header","listItems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,QAAP,IAAmBC,aAAnB,QAAwC,wBAAxC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;;AAEA,kBAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AAChC,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA6BR,UAAU,CAACK,gBAAD,CAA7C,CADgC,CAGhC;;AACA,QAAMI,WAAW,GAAG,MAAM;AACxB;AACA,QAAI,CAACD,UAAL,EAAiB;AACf,aACGD,UAAU,IACTA,UAAU,CAACG,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,kBACb,QAAC,QAAD;AACE,QAAA,IAAI,EAAEA,KAAK,GAAG,CADhB;AAEE,QAAA,IAAI,EAAED,IAAI,CAAC,SAAD,CAAJ,CAAgBE,KAFxB;AAGE,QAAA,MAAM,EAAEF,IAAI,CAAC,WAAD,CAAJ,CAAkBE,KAH5B;AAIE,QAAA,MAAM,EAAEF,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,EAAoBE;AAJ9B,SAKOF,IALP;AAAA;AAAA;AAAA;AAAA,cADF,CADF,iBAUE,QAAC,aAAD;AAAe,QAAA,KAAK,EAAC,WAArB;AAAA,+BACE;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXJ;AAkBD;;AACD,WACEJ,UAAU,IACVA,UAAU,CACPO,MADH,CACUC,KAAK,IAAIA,KAAK,CAAC,SAAD,CAAL,CAAiBF,KAAjB,CAAuBG,WAAvB,GAAqCC,QAArC,CAA8CT,UAAU,CAACQ,WAAX,EAA9C,CADnB,EAEGN,GAFH,CAEOC,IAAI,iBACP,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAI,CAAC,SAAD,CAAJ,CAAgBE,KAAhC;AAAuC,MAAA,MAAM,EAAEF,IAAI,CAAC,WAAD,CAAJ,CAAkBE;AAAjE,OAA6EF,IAA7E;AAAA;AAAA;AAAA;AAAA,YAHJ,CAFF;AAQD,GA9BD;;AAgCA,sBACE;AAAK,IAAA,SAAS,EAAG,GAAEL,SAAU,IAAGH,MAAM,CAACe,SAAU,EAAjD;AAAA,4BACE;AAAI,MAAA,SAAS,EAAG,GAAEf,MAAM,CAACgB,MAAO,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEhB,MAAM,CAACiB,SAAvB;AAAA,gBAAmCX,WAAW;AAA9C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA1CD","sourcesContent":["import React, { useContext } from 'react'\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton'\nimport styles from './list.module.scss'\n\nimport ListItem from '../list-item/ListItem'\n\nimport { TopAlbumsContext } from '../../state/topAlbumsContext'\n\nexport default ({ className }) => {\n  const { albumsList, searchTerm } = useContext(TopAlbumsContext)\n\n  // eslint-disable-next-line no-unused-vars\n  const renderItems = () => {\n    // here we render the 100 albums, then user can filter if they want with search\n    if (!searchTerm) {\n      return (\n        (albumsList &&\n          albumsList.map((item, index) => (\n            <ListItem\n              rank={index + 1}\n              name={item['im:name'].label}\n              artist={item['im:artist'].label}\n              imgSrc={item['im:image'][0].label}\n              key={item}\n            />\n          ))) || (\n          <SkeletonTheme color=\"lightGray\">\n            <section>\n              <Skeleton count={10} />\n            </section>\n          </SkeletonTheme>\n        )\n      )\n    }\n    return (\n      albumsList &&\n      albumsList\n        .filter(album => album['im:name'].label.toLowerCase().includes(searchTerm.toLowerCase()))\n        .map(item => (\n          <ListItem name={item['im:name'].label} artist={item['im:artist'].label} key={item} />\n        ))\n    )\n  }\n\n  return (\n    <div className={`${className} ${styles.container}`}>\n      <h2 className={`${styles.header} text-white`}>Album</h2>\n      <div className={styles.listItems}>{renderItems()}</div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}