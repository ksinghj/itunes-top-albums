{"ast":null,"code":"var _jsxFileName = \"/Users/kartarjabanda/Documents/WebDev/itunes-top-albums/src/components/list-item/ListItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport styles from './list-item.module.scss';\nimport { TopAlbumsContext } from '../../state/topAlbumsContext';\nimport placeholder from '../../assets/top100UK.png'; // eslint-disable-next-line import/no-anonymous-default-export\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default _s(({\n  rank,\n  name,\n  artist,\n  imgSrc\n}) => {\n  _s();\n\n  const {\n    searchTerm\n  } = useContext(TopAlbumsContext);\n  const [visible, setVisible] = useState(false);\n  const [artistDetails, setArtistDetails] = useState({\n    genre: '',\n    from: '',\n    bio: ''\n  });\n\n  const getArtistDetails = async () => {\n    const formattedArtistName = artist.replace(/ /g, '_'); // replace spaces w _'s for api\n\n    const URL = `https://www.theaudiodb.com/api/v1/json/1/search.php?s=${formattedArtistName}`;\n    fetch(URL).then(data => data.json()).then(res => {\n      if (res.artists == null) {\n        setArtistDetails({\n          genre: 'No data',\n          from: 'No data',\n          bio: 'No data, sorry.'\n        });\n        return;\n      }\n\n      res.artists[0].then(artistsData => setArtistDetails({\n        genre: artistsData.strGenre,\n        from: artistsData.strCountry,\n        bio: artistsData.strBiographyEN\n      }));\n    });\n  };\n\n  useEffect(() => {\n    setVisible(false);\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.containerRow,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-style\": \"none\",\n        type: \"button\",\n        onClick: () => {\n          setVisible(!visible);\n        },\n        className: styles.header,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: `${styles.rank} text-white`,\n          children: rank\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.imgContainer,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.img,\n            src: imgSrc || placeholder,\n            alt: \"album cover art\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `${styles.title} text-white`,\n          children: [`${name.replace(/\\([^()]*\\)/g, '')}` // remove text in brackets\n          , /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-primary\",\n            children: artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-style\": \"none\",\n        type: \"button\",\n        onClick: () => {\n          getArtistDetails();\n          setVisible(!visible);\n        },\n        className: \"text-white\",\n        children: [\"See\", visible ? ' less' : ' more']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `collapse ${styles.content} ${visible ? 'visible' : 'hidden'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.genre,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.content__header,\n          children: \"Genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.content__text} text-white`,\n          children: artistDetails.genre || /*#__PURE__*/_jsxDEV(SkeletonTheme, {\n            color: \"lightGray\",\n            children: /*#__PURE__*/_jsxDEV(Skeleton, {\n              count: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.from,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.content__header,\n          children: \"From\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.content__text} text-white`,\n          children: artistDetails.from || /*#__PURE__*/_jsxDEV(SkeletonTheme, {\n            color: \"lightGray\",\n            children: /*#__PURE__*/_jsxDEV(Skeleton, {\n              count: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.about,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.content__header,\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.content__text} text-white`,\n          children: artistDetails.bio || /*#__PURE__*/_jsxDEV(SkeletonTheme, {\n            color: \"lightGray\",\n            children: /*#__PURE__*/_jsxDEV(Skeleton, {\n              count: 10\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}, \"Tu/GvXhWj5i0jybY12XzKn9Q+Zg=\");","map":{"version":3,"sources":["/Users/kartarjabanda/Documents/WebDev/itunes-top-albums/src/components/list-item/ListItem.jsx"],"names":["React","useState","useContext","useEffect","Skeleton","SkeletonTheme","styles","TopAlbumsContext","placeholder","rank","name","artist","imgSrc","searchTerm","visible","setVisible","artistDetails","setArtistDetails","genre","from","bio","getArtistDetails","formattedArtistName","replace","URL","fetch","then","data","json","res","artists","artistsData","strGenre","strCountry","strBiographyEN","containerRow","header","imgContainer","img","title","content","content__header","content__text","about"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton'\nimport styles from './list-item.module.scss'\n\nimport { TopAlbumsContext } from '../../state/topAlbumsContext'\n\nimport placeholder from '../../assets/top100UK.png'\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default ({ rank, name, artist, imgSrc }) => {\n  const { searchTerm } = useContext(TopAlbumsContext)\n  const [visible, setVisible] = useState(false)\n  const [artistDetails, setArtistDetails] = useState({\n    genre: '',\n    from: '',\n    bio: '',\n  })\n\n  const getArtistDetails = async () => {\n    const formattedArtistName = artist.replace(/ /g, '_') // replace spaces w _'s for api\n    const URL = `https://www.theaudiodb.com/api/v1/json/1/search.php?s=${formattedArtistName}`\n    fetch(URL)\n      .then(data => data.json())\n      .then(res => {\n        if (res.artists == null) {\n          setArtistDetails({\n            genre: 'No data',\n            from: 'No data',\n            bio: 'No data, sorry.',\n          })\n          return\n        }\n        res.artists[0].then(artistsData =>\n          setArtistDetails({\n            genre: artistsData.strGenre,\n            from: artistsData.strCountry,\n            bio: artistsData.strBiographyEN,\n          })\n        )\n      })\n  }\n\n  useEffect(() => {\n    setVisible(false)\n  }, [searchTerm])\n\n  return (\n    <>\n      <div className={styles.containerRow}>\n        <button\n          data-style=\"none\"\n          type=\"button\"\n          onClick={() => {\n            setVisible(!visible)\n          }}\n          className={styles.header}\n        >\n          <p className={`${styles.rank} text-white`}>{rank}</p>\n          <div className={styles.imgContainer}>\n            <img className={styles.img} src={imgSrc || placeholder} alt=\"album cover art\" />\n          </div>\n          <p className={`${styles.title} text-white`}>\n            {\n              `${name.replace(/\\([^()]*\\)/g, '')}` // remove text in brackets\n            }\n            <span className=\"text-primary\">{artist}</span>\n          </p>\n        </button>\n        <button\n          data-style=\"none\"\n          type=\"button\"\n          onClick={() => {\n            getArtistDetails()\n            setVisible(!visible)\n          }}\n          className=\"text-white\"\n        >\n          See\n          {visible ? ' less' : ' more'}\n        </button>\n      </div>\n      <div className={`collapse ${styles.content} ${visible ? 'visible' : 'hidden'}`}>\n        <div className={styles.genre}>\n          <p className={styles.content__header}>Genre</p>\n          <div className={`${styles.content__text} text-white`}>\n            {artistDetails.genre || (\n              <SkeletonTheme color=\"lightGray\">\n                <Skeleton count={1} />\n              </SkeletonTheme>\n            )}\n          </div>\n        </div>\n        <div className={styles.from}>\n          <p className={styles.content__header}>From</p>\n          <div className={`${styles.content__text} text-white`}>\n            {artistDetails.from || (\n              <SkeletonTheme color=\"lightGray\">\n                <Skeleton count={1} />\n              </SkeletonTheme>\n            )}\n          </div>\n        </div>\n        <div className={styles.about}>\n          <p className={styles.content__header}>About</p>\n          <div className={`${styles.content__text} text-white`}>\n            {artistDetails.bio || (\n              <SkeletonTheme color=\"lightGray\">\n                <Skeleton count={10} />\n              </SkeletonTheme>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}